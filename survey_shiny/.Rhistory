IT_infrastructures = IT_infrastructures/max(IT_infrastructures),
IT_components = IT_components/max(IT_components),
data_warehouse = data_warehouse/max(data_warehouse),
annotations = annotations/max(annotations),
informed_consent = informed_consent/max(informed_consent)
),2)
tier_norm_BB$tier <- ifelse(tier_norm_BB$total_score < 11, "Starting",
ifelse(tier_norm_BB$total_score < 21, "Advanced", "Mature"))
dati<-pivot_longer(tier_norm_BB, IT_head:informed_consent,names_to="facilities",values_to="score")
dati<-data.frame(dati,
macro_areas=c(rep(c(rep("personnel",4),rep("infrastructure",5),rep("data",5)),
nrow(tier_norm_BB))))
runApp("bb4FAIR_app")
View(dati)
tier_norm_BB <- round(scores[,2:16] %>%
mutate(dedicated_personnel = dedicated_personnel/max(dedicated_personnel),
ontologies_richness = ontologies_richness/max(ontologies_richness),
BIMS = BIMS/max(BIMS),
IT_infrastructures = IT_infrastructures/max(IT_infrastructures),
IT_components = IT_components/max(IT_components),
data_warehouse = data_warehouse/max(data_warehouse),
annotations = annotations/max(annotations),
informed_consent = informed_consent/max(informed_consent)
),2)
tier_norm_BB$tier <- ifelse(tier_norm_BB$total_score < 11, "Starting",
ifelse(tier_norm_BB$total_score < 21, "Advanced", "Mature"))
dati<-pivot_longer(tier_norm_BB, IT_head:informed_consent,names_to="facilities",values_to="score")
dati<-data.frame(dati,
macro_areas=c(rep(c(rep("personnel",4),rep("infrastructure",5),rep("data",5)),
nrow(tier_norm_BB))))
new_names <- c(
"IT head",
"dedicated personnel",
"ontologies richness",
"common data models",
"BIMS",
"data management",
"IT infrastructures",
"massive storage",
"IT components",
"data warehouse",
"clinical data availability",
"annotations",
"registry data availability",
"informed consent")
dati$nuova_variabile <- factor(dati$facilities, levels = unique(dati$facilities), labels = new_names)
# preprocessing radar plot
lista_tier <- tier_norm_BB %>% group_split(tier)
col_median1 <- apply(lista_tier[[1]][,c(2:15)], 2, median)
col_median2 <- apply(lista_tier[[2]][,c(2:15)], 2, median)
col_median3 <- apply(lista_tier[[3]][,c(2:15)], 2, median)
col_summary <- data.frame(tier=c("Starting","Advanced","Mature"),t(data.frame(Base = col_median3, Intermediate = col_median1, High = col_median2)))
col_summary <- cbind(col_summary[,-c(7,13:15)],col_summary[,c(7,13:15)])
# preprocessing legend
etichette<-c("ITh","pers","onto","CDM","BIMS","ITi","store","ITc","DWH","regis","DM","anno","clin","IC")
etichette <- paste0("    ", etichette)
mytheme <- ttheme_default(
core = list(
fg_params = list(hjust = 0, x = 0.1, fontsize = 12),
padding = unit(c(0.5, 0.5), "cm")
),
colhead = list(
fg_params = list(fontsize = 12, fontface="bold"),
padding = unit(c(0.5, 0.5), "cm")
)
)
tabella <- tableGrob(data.frame(etichette = as.character(etichette),
nuova_variabile = c(as.character(unique(dati$nuova_variabile)[1:5]),
as.character(unique(dati$nuova_variabile)[7:11]),
as.character(unique(dati$nuova_variabile)[c(6,12:14)]))),
theme = mytheme, cols = c("", "record"))
tabella$widths <- unit(tabella$widths + unit(0.5, "cm"), "cm")
ggplot(dati)+
geom_density(aes(x = score), fill="#244270", alpha = 0.8) +
facet_grid(macro_areas~., switch = "y")+
scale_y_continuous(name = NULL, sec.axis = sec_axis(~., name = "density")) +
theme(panel.background = element_blank(),
axis.text.x = element_text(face = "bold",size = 10),
axis.text.y.right = element_text(face = "bold",size = 10, hjust = 1),
axis.title.x = element_text(face = "bold"),
axis.title.y.right = element_text(face = "bold", margin = margin(l = 15)),
strip.text.y = element_text(face = "bold",size = 10),
legend.text = element_text(face = "bold"),
legend.title = element_text(face = "bold"),
legend.position="none",
strip.placement = "outside",
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.title.y = element_blank(),
axis.line.y.right = element_line(color = "grey30"),
axis.ticks.x = element_line(color = "grey30"),
axis.line.x = element_blank(),
axis.ticks.y.right = element_line(color = "grey30"),
panel.spacing.x = unit(-3, "lines"))
ggplot(dati, aes(x = biobank, y = nuova_variabile, fill = score)) +
geom_tile(color = "black", linewidth = 0.7) +
scale_fill_gradient(low="#244270", high="#EB5E00") +
scale_y_discrete(position = "right",name="facilities") +
theme(panel.background = element_blank(),
axis.text.x = element_text(face = "bold", size = 9),
axis.text.y = element_text(face = "bold", size = 9, hjust = 1),
axis.text.y.right = element_text(face = "bold", size = 9, margin = margin(l = -20)),
axis.ticks.y.right = element_blank(),
axis.title.y.right = element_text(face = "bold", margin = margin(l = 10)),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
strip.text = element_text(face = "bold", size = 10),
legend.text = element_text(face = "bold"),
legend.title = element_text(face = "bold"),
strip.placement = "outside") +
facet_grid(rows = vars(macro_areas), switch = "y", scale = "free_y")
rep(NUMBERS[1:47], each = 14)
seq(1,47)
tier_norm_BB$biobank <- seq(1,47)
tier_norm_BB$tier <- ifelse(tier_norm_BB$total_score < 11, "Starting",
ifelse(tier_norm_BB$total_score < 21, "Advanced", "Mature"))
dati<-pivot_longer(tier_norm_BB, IT_head:informed_consent,names_to="facilities",values_to="score")
dati<-data.frame(dati,
macro_areas=c(rep(c(rep("personnel",4),rep("infrastructure",5),rep("data",5)),
nrow(tier_norm_BB))))
# Heatmap -----------------------------------------------------------
# Preprocessing data
new_names <- c(
"IT head",
"dedicated personnel",
"ontologies richness",
"common data models",
"BIMS",
"data management",
"IT infrastructures",
"massive storage",
"IT components",
"data warehouse",
"clinical data availability",
"annotations",
"registry data availability",
"informed consent")
dati$nuova_variabile <- factor(dati$facilities, levels = unique(dati$facilities), labels = new_names)
# preprocessing radar plot
lista_tier <- tier_norm_BB %>% group_split(tier)
col_median1 <- apply(lista_tier[[1]][,c(2:15)], 2, median)
col_median2 <- apply(lista_tier[[2]][,c(2:15)], 2, median)
col_median3 <- apply(lista_tier[[3]][,c(2:15)], 2, median)
col_summary <- data.frame(tier=c("Starting","Advanced","Mature"),t(data.frame(Base = col_median3, Intermediate = col_median1, High = col_median2)))
col_summary <- cbind(col_summary[,-c(7,13:15)],col_summary[,c(7,13:15)])
# preprocessing legend
etichette<-c("ITh","pers","onto","CDM","BIMS","ITi","store","ITc","DWH","regis","DM","anno","clin","IC")
etichette <- paste0("    ", etichette)
mytheme <- ttheme_default(
core = list(
fg_params = list(hjust = 0, x = 0.1, fontsize = 12),
padding = unit(c(0.5, 0.5), "cm")
),
colhead = list(
fg_params = list(fontsize = 12, fontface="bold"),
padding = unit(c(0.5, 0.5), "cm")
)
)
tabella <- tableGrob(data.frame(etichette = as.character(etichette),
nuova_variabile = c(as.character(unique(dati$nuova_variabile)[1:5]),
as.character(unique(dati$nuova_variabile)[7:11]),
as.character(unique(dati$nuova_variabile)[c(6,12:14)]))),
theme = mytheme, cols = c("", "record"))
tabella$widths <- unit(tabella$widths + unit(0.5, "cm"), "cm")
ggplot(dati, aes(x = biobank, y = nuova_variabile, fill = score)) +
geom_tile(color = "black", linewidth = 0.7) +
scale_fill_gradient(low="#244270", high="#EB5E00") +
scale_y_discrete(position = "right",name="facilities") +
theme(panel.background = element_blank(),
axis.text.x = element_text(face = "bold", size = 9),
axis.text.y = element_text(face = "bold", size = 9, hjust = 1),
axis.text.y.right = element_text(face = "bold", size = 9, margin = margin(l = -20)),
axis.ticks.y.right = element_blank(),
axis.title.y.right = element_text(face = "bold", margin = margin(l = 10)),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
strip.text = element_text(face = "bold", size = 10),
legend.text = element_text(face = "bold"),
legend.title = element_text(face = "bold"),
strip.placement = "outside") +
facet_grid(rows = vars(macro_areas), switch = "y", scale = "free_y")
ggradar(
col_summary[1,],
base.size = 8,
font.radar = "Arial Black",
values.radar = c("0%", "50%", "100%"),
axis.labels = etichette,
plot.extent.x.sf = 1,
plot.extent.y.sf = 1.2,
label.centre.y = FALSE,
grid.line.width = 0.3,
grid.label.size = 3,
label.gridline.min = TRUE,
label.gridline.mid = TRUE,
label.gridline.max = TRUE,
axis.label.offset = 1.1,
axis.label.size = 4,
axis.line.colour = "#244270",
group.line.width = 1.1,
group.point.size = 2,
group.colours = "#EC6707",
background.circle.colour = "#244270",
background.circle.transparency = 0.1,
plot.legend = FALSE,
legend.title = "",
plot.title = paste(col_summary[1,1],"Tier" ),
legend.text.size = 10,
legend.position = "bottom",
fill = TRUE,
fill.alpha = 0.4) +
theme_classic(base_family='Arial Black') +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold", size = 12),
strip.text = element_text(face = "bold"),
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.text = element_text(face = "bold"),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
legend.position = "none",
plot.margin = margin(20, 20, 20, 20, "pt")) +
labs(y = paste("Biobanks median score:"))
ggradar(
col_summary[1,],
base.size = 8,
font.radar = "Arial Black",
values.radar = c("0%", "50%", "100%"),
axis.labels = etichette,
plot.extent.x.sf = 1,
plot.extent.y.sf = 1.2,
label.centre.y = FALSE,
grid.line.width = 0.3,
grid.label.size = 3,
label.gridline.min = TRUE,
label.gridline.mid = TRUE,
label.gridline.max = TRUE,
axis.label.offset = 1.1,
axis.label.size = 4,
axis.line.colour = "#244270",
group.line.width = 1.1,
group.point.size = 2,
group.colours = "#EC6707",
background.circle.colour = "#244270",
background.circle.transparency = 0.1,
plot.legend = FALSE,
legend.title = "",
plot.title = paste(col_summary[1,1],"Tier" ),
legend.text.size = 10,
legend.position = "bottom",
fill = TRUE,
fill.alpha = 0.4) +
theme_classic(base_family='Arial Black') +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold", size = 12),
strip.text = element_text(face = "bold"),
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.text = element_text(face = "bold"),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
legend.position = "none",
plot.margin = margin(20, 20, 20, 20, "pt")) +
labs(y = paste("Biobanks median score:"))
ggradar(
col_summary[2,],
base.size = 8,
font.radar = "Arial Black",
values.radar = c("0%", "50%", "100%"),
axis.labels = etichette,
plot.extent.x.sf = 1,
plot.extent.y.sf = 1.2,
label.centre.y = FALSE,
grid.line.width = 0.3,
grid.label.size = 3,
label.gridline.min = TRUE,
label.gridline.mid = TRUE,
label.gridline.max = TRUE,
axis.label.offset = 1.1,
axis.label.size = 4,
axis.line.colour = "#244270",
group.line.width = 1.1,
group.point.size = 2,
group.colours = "#EC6707",
background.circle.colour = "#244270",
background.circle.transparency = 0.1,
plot.legend = FALSE,
legend.title = "",
plot.title = paste(col_summary[2,1],"Tier" ),
legend.text.size = 10,
legend.position = "bottom",
fill = TRUE,
fill.alpha = 0.4) +
theme_classic(base_family='Arial Black') +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold", size = 12),
strip.text = element_text(face = "bold"),
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.text = element_text(face = "bold"),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
legend.position = "none",
plot.margin = margin(20, 20, 20, 20, "pt")) +
labs(y = paste("Biobanks median score:"))
col_summary
View(col_summary)
lista_tier
colnames(lista_tier)
names(lista_tier)
lista_tier[[1]]
colnames(lista_tier[[1]])
col_median1 <- apply(lista_tier[[1]][,c(1:14)], 2, median)
col_median2 <- apply(lista_tier[[2]][,c(1:14)], 2, median)
col_median3 <- apply(lista_tier[[3]][,c(1:14)], 2, median)
col_summary <- data.frame(tier=c("Starting","Advanced","Mature"),t(data.frame(Base = col_median3, Intermediate = col_median1, High = col_median2)))
col_summary
View(col_summary)
ggradar(
col_summary[1,],
base.size = 8,
font.radar = "Arial Black",
values.radar = c("0%", "50%", "100%"),
axis.labels = etichette,
plot.extent.x.sf = 1,
plot.extent.y.sf = 1.2,
label.centre.y = FALSE,
grid.line.width = 0.3,
grid.label.size = 3,
label.gridline.min = TRUE,
label.gridline.mid = TRUE,
label.gridline.max = TRUE,
axis.label.offset = 1.1,
axis.label.size = 4,
axis.line.colour = "#244270",
group.line.width = 1.1,
group.point.size = 2,
group.colours = "#EC6707",
background.circle.colour = "#244270",
background.circle.transparency = 0.1,
plot.legend = FALSE,
legend.title = "",
plot.title = paste(col_summary[1,1],"Tier" ),
legend.text.size = 10,
legend.position = "bottom",
fill = TRUE,
fill.alpha = 0.4) +
theme_classic(base_family='Arial Black') +
theme(
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold", size = 12),
strip.text = element_text(face = "bold"),
plot.title = element_text(size = 14, face = "bold", hjust = 0.5),
axis.text = element_text(face = "bold"),
axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
legend.position = "none",
plot.margin = margin(20, 20, 20, 20, "pt")) +
labs(y = paste("Biobanks median score:"))
setwd("C:/Users/Antonella/Desktop/BBMRI_repos/bb4FAIR/survey_shiny")
runApp("bb4FAIR_app")
seq(1:dim(data)[1])
seq(1:dim(scores)[1])
runApp("bb4FAIR_app")
runApp("bb4FAIR_app")
runApp("bb4FAIR_app")
runApp("bb4FAIR_app")
runApp("bb4FAIR_app")
runApp("bb4FAIR_app")
View(tier_norm_BB)
runApp("bb4FAIR_app")
scores <- scores%>%arrange(total_score, desc = TRUE)
View(scores)
runApp("bb4FAIR_app")
scores <- read_xlsx("./tiering2.xlsx", sheet = "total_score")
setwd("C:/Users/Antonella/Desktop/BBMRI_repos/bb4FAIR")
scores <- read_xlsx("./tiering2.xlsx", sheet = "total_score")
setwd("C:/Users/Antonella/Desktop/BBMRI_repos/bb4FAIR/survey_shiny/bb4FAIR_app")
scores <- read_xlsx("./tiering2.xlsx", sheet = "total_score")
colnames(scores)[1] <- "BB_ID"
info_area <- read_xlsx("./quantitativa.xlsx", sheet = "razionale")
# questions <- read_xlsx("./quantitativa.xlsx", sheet = 4)
## add tiers
scores$tier <- ifelse(scores$total_score > 20, "Mature",
ifelse(scores$total_score < 11, "Starting", "Advanced"))
macroareas <- info_area[1:14,c("domanda","area")]
scores$BB_ID <- paste0("BB", seq(1:dim(scores)[1]))
scores <- scores%>%arrange(total_score, desc = FALSE)
View(scores)
setwd("C:/Users/Antonella/Desktop/BBMRI_repos/bb4FAIR/survey_shiny")
runApp("bb4FAIR_app")
?arrange
runApp("bb4FAIR_app")
col_summary[1,]
colnames(col_summary)
erichette
etichette
?scale_y_discrete
View(tier_norm_BB$data_management)
tier_norm_BB$data_management
View(tier_norm_BB)
setwd("C:/Users/Antonella/Desktop/BBMRI_repos/bb4FAIR/survey_shiny/bb4FAIR_app")
# Load Data ---------------------------------------------------------------
# tier_BB <- read_xlsx("/punteggi_tiering.xlsx", sheet = "abb")
scores <- read_xlsx("./tiering2.xlsx", sheet = "total_score")
# scores <- read_xlsx("./punteggi_tiering.xlsx", sheet = "punteggi_totali")
colnames(scores)[1] <- "BB_ID"
info_area <- read_xlsx("./quantitativa.xlsx", sheet = "razionale")
# questions <- read_xlsx("./quantitativa.xlsx", sheet = 4)
## add tiers
scores$tier <- ifelse(scores$total_score > 20, "Mature",
ifelse(scores$total_score < 11, "Starting", "Advanced"))
macroareas <- info_area[1:14,c("domanda","area")]
scores$BB_ID <- paste0("BB", seq(1:dim(scores)[1]))
scores <- scores%>%arrange(desc(total_score))
tier_norm_BB <- round(scores[,2:16] %>%
mutate(dedicated_personnel = dedicated_personnel/max(dedicated_personnel),
ontologies_richness = ontologies_richness/max(ontologies_richness),
BIMS = BIMS/max(BIMS),
IT_infrastructures = IT_infrastructures/max(IT_infrastructures),
IT_components = IT_components/max(IT_components),
data_warehouse = data_warehouse/max(data_warehouse),
annotations = annotations/max(annotations),
informed_consent = informed_consent/max(informed_consent)
),2)
tier_norm_BB$biobank <- seq(1,47)
tier_norm_BB$tier <- ifelse(tier_norm_BB$total_score < 11, "Starting",
ifelse(tier_norm_BB$total_score < 21, "Advanced", "Mature"))
dati<-pivot_longer(tier_norm_BB, IT_head:informed_consent,names_to="facilities",values_to="score")
dati<-data.frame(dati,
macro_areas=c(rep(c(rep("personnel",4),rep("infrastructure",5),rep("data",5)),
nrow(tier_norm_BB))))
# Heatmap -----------------------------------------------------------
# Preprocessing data
new_names <- c(
"IT head",
"dedicated personnel",
"ontologies richness",
"common data models",
"BIMS",
"data management",
"IT infrastructures",
"massive storage",
"IT components",
"data warehouse",
"clinical data availability",
"annotations",
"registry data availability",
"informed consent")
dati$nuova_variabile <- factor(dati$facilities, levels = unique(dati$facilities), labels = new_names)
# preprocessing radar plot
lista_tier <- tier_norm_BB %>% group_split(tier)
col_median1 <- apply(lista_tier[[1]][,c(1:14)], 2, median)
col_median2 <- apply(lista_tier[[2]][,c(1:14)], 2, median)
col_median3 <- apply(lista_tier[[3]][,c(1:14)], 2, median)
col_summary <- data.frame(tier=c("Starting","Advanced","Mature"),t(data.frame(Base = col_median3, Intermediate = col_median1, High = col_median2)))
# col_summary <- cbind(col_summary[,-c(7,13:15)],col_summary[,c(7,13:15)])
# preprocessing legend
etichette <-c("ITh","pers","onto","CDM","BIMS","ITi","store","ITc","DWH",
"clin","DM","anno","regis","IC")
etichette <- paste0("    ", etichette)
mytheme <- ttheme_default(
core = list(
fg_params = list(hjust = 0, x = 0.1, fontsize = 12),
padding = unit(c(0.5, 0.5), "cm")
),
colhead = list(
fg_params = list(fontsize = 12, fontface="bold"),
padding = unit(c(0.5, 0.5), "cm")
)
)
# Load Data ---------------------------------------------------------------
# tier_BB <- read_xlsx("/punteggi_tiering.xlsx", sheet = "abb")
scores <- read_xlsx("./tiering2.xlsx", sheet = "total_score")
# scores <- read_xlsx("./punteggi_tiering.xlsx", sheet = "punteggi_totali")
colnames(scores)[1] <- "BB_ID"
info_area <- read_xlsx("./quantitativa.xlsx", sheet = "razionale")
# questions <- read_xlsx("./quantitativa.xlsx", sheet = 4)
## add tiers
scores$tier <- ifelse(scores$total_score > 20, "Mature",
ifelse(scores$total_score < 11, "Starting", "Advanced"))
macroareas <- info_area[1:14,c("domanda","area")]
scores$BB_ID <- paste0("BB", seq(1:dim(scores)[1]))
scores <- scores%>%arrange(desc(total_score))
tier_norm_BB$data_management
tier_norm_BB$data_management[1:19]
col_summary
colnames(col_summary)
setwd("C:/Users/Antonella/Desktop/BBMRI_repos/bb4FAIR/survey_shiny")
setwd("C:/Users/Antonella/Desktop/BBMRI_repos/bb4FAIR/survey_shiny")
runApp("bb4FAIR_app")
runApp("bb4FAIR_app")
runApp("bb4FAIR_app")
runApp("bb4FAIR_app")
runApp("bb4FAIR_app")
runApp("bb4FAIR_app")
runApp("bb4FAIR_app")
